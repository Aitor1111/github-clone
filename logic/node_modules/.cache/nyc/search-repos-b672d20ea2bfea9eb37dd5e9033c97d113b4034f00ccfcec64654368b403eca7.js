function cov_2jfkig7t33(){var path="/Users/aitortrujillo/Documents/Coding/github-clone/logic/search-repos.js";var hash="ffcc53f4699758fea4d6941763b06c9cc26b6fc0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/aitortrujillo/Documents/Coding/github-clone/logic/search-repos.js",statementMap:{"0":{start:{line:11,column:14},end:{line:11,column:35}},"1":{start:{line:13,column:0},end:{line:35,column:1}},"2":{start:{line:14,column:4},end:{line:34,column:8}},"3":{start:{line:15,column:8},end:{line:33,column:9}},"4":{start:{line:16,column:24},end:{line:16,column:92}},"5":{start:{line:17,column:27},end:{line:17,column:32}},"6":{start:{line:18,column:28},end:{line:18,column:37}},"7":{start:{line:19,column:25},end:{line:19,column:34}},"8":{start:{line:21,column:24},end:{line:21,column:67}},"9":{start:{line:22,column:28},end:{line:22,column:44}},"10":{start:{line:23,column:31},end:{line:23,column:34}},"11":{start:{line:25,column:12},end:{line:29,column:13}},"12":{start:{line:25,column:32},end:{line:25,column:58}},"13":{start:{line:27,column:34},end:{line:27,column:53}},"14":{start:{line:28,column:16},end:{line:28,column:38}},"15":{start:{line:31,column:12},end:{line:31,column:30}},"16":{start:{line:32,column:12},end:{line:32,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:17},end:{line:13,column:18}},loc:{start:{line:13,column:40},end:{line:35,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:12},end:{line:14,column:13}},loc:{start:{line:14,column:24},end:{line:34,column:5}},line:14}},branchMap:{"0":{loc:{start:{line:25,column:12},end:{line:29,column:13}},type:"if",locations:[{start:{line:25,column:12},end:{line:29,column:13}},{start:{line:25,column:12},end:{line:29,column:13}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"ffcc53f4699758fea4d6941763b06c9cc26b6fc0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2jfkig7t33=function(){return actualCoverage;};}return actualCoverage;}cov_2jfkig7t33();/**
 * Retrieves user repositories filtered by name query.
 * 
 * @param {string} user The user repos to retrieve. 
 * @param {string} query The filter to retrieve, finding matches by name. 
 * 
 * @returns {Promise<String>} The user repositories filtered if it resolves, an error if it rejects.
 * 
 * @throws {Error} If cannot find the user, or other unexpected errors.
 */const fetch=(cov_2jfkig7t33().s[0]++,require("node-fetch"));cov_2jfkig7t33().s[1]++;module.exports=function(user,query){cov_2jfkig7t33().f[0]++;cov_2jfkig7t33().s[2]++;return(async()=>{cov_2jfkig7t33().f[1]++;cov_2jfkig7t33().s[3]++;try{const url=(cov_2jfkig7t33().s[4]++,`https://api.github.com/search/repositories?q=${query}+user:${user}`);const method=(cov_2jfkig7t33().s[5]++,'GET');const headers=(cov_2jfkig7t33().s[6]++,undefined);const body=(cov_2jfkig7t33().s[7]++,undefined);const res=(cov_2jfkig7t33().s[8]++,await fetch(url,{method,headers,body}));const content=(cov_2jfkig7t33().s[9]++,await res.text());const{status}=(cov_2jfkig7t33().s[10]++,res);cov_2jfkig7t33().s[11]++;if(status===200){cov_2jfkig7t33().b[0][0]++;cov_2jfkig7t33().s[12]++;return JSON.parse(content);}else{cov_2jfkig7t33().b[0][1]++;const{error}=(cov_2jfkig7t33().s[13]++,JSON.parse(content));cov_2jfkig7t33().s[14]++;throw new Error(error);}}catch(error){cov_2jfkig7t33().s[15]++;console.log(error);cov_2jfkig7t33().s[16]++;throw new Error(error.message);}})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC1yZXBvcy5qcyJdLCJuYW1lcyI6WyJmZXRjaCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwidXNlciIsInF1ZXJ5IiwidXJsIiwibWV0aG9kIiwiaGVhZGVycyIsInVuZGVmaW5lZCIsImJvZHkiLCJyZXMiLCJjb250ZW50IiwidGV4dCIsInN0YXR1cyIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiRXJyb3IiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6ImdxRUFlWTsyRkFmWjs7Ozs7Ozs7O0dBVUEsS0FBTUEsQ0FBQUEsS0FBSywwQkFBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBVixDQUFYLEMsd0JBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFpQixTQUFVQyxJQUFWLENBQWdCQyxLQUFoQixDQUF1QixpREFDcEMsTUFBTyxDQUFDLFNBQVksaURBQ2hCLEdBQUksQ0FDQSxLQUFNQyxDQUFBQSxHQUFHLDBCQUFJLGdEQUErQ0QsS0FBTSxTQUFRRCxJQUFLLEVBQXRFLENBQVQsQ0FDQSxLQUFNRyxDQUFBQSxNQUFNLDBCQUFHLEtBQUgsQ0FBWixDQUNBLEtBQU1DLENBQUFBLE9BQU8sMEJBQUdDLFNBQUgsQ0FBYixDQUNBLEtBQU1DLENBQUFBLElBQUksMEJBQUdELFNBQUgsQ0FBVixDQUVBLEtBQU1FLENBQUFBLEdBQUcsMEJBQUcsS0FBTVgsQ0FBQUEsS0FBSyxDQUFDTSxHQUFELENBQU0sQ0FBRUMsTUFBRixDQUFVQyxPQUFWLENBQW1CRSxJQUFuQixDQUFOLENBQWQsQ0FBVCxDQUNBLEtBQU1FLENBQUFBLE9BQU8sMEJBQUcsS0FBTUQsQ0FBQUEsR0FBRyxDQUFDRSxJQUFKLEVBQVQsQ0FBYixDQUNBLEtBQU0sQ0FBRUMsTUFBRiw0QkFBYUgsR0FBYixDQUFOLENBUkEseUJBVUEsR0FBSUcsTUFBTSxHQUFLLEdBQWYsQ0FBb0IsMkRBQU9DLENBQUFBLElBQUksQ0FBQ0MsS0FBTCxDQUFXSixPQUFYLENBQVAsQ0FBMEIsQ0FBOUMsSUFDSyw0QkFDRCxLQUFNLENBQUVLLEtBQUYsNEJBQVlGLElBQUksQ0FBQ0MsS0FBTCxDQUFXSixPQUFYLENBQVosQ0FBTixDQURDLHlCQUVELEtBQU0sSUFBSU0sQ0FBQUEsS0FBSixDQUFVRCxLQUFWLENBQU4sQ0FDSCxDQUNKLENBQUMsTUFBT0EsS0FBUCxDQUFjLDBCQUNaRSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsS0FBWixFQURZLHlCQUVaLEtBQU0sSUFBSUMsQ0FBQUEsS0FBSixDQUFVRCxLQUFLLENBQUNJLE9BQWhCLENBQU4sQ0FDSCxDQUNKLENBcEJNLEdBQVAsQ0FxQkgsQ0F0QkQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJldHJpZXZlcyB1c2VyIHJlcG9zaXRvcmllcyBmaWx0ZXJlZCBieSBuYW1lIHF1ZXJ5LlxuICogXG4gKiBAcGFyYW0ge3N0cmluZ30gdXNlciBUaGUgdXNlciByZXBvcyB0byByZXRyaWV2ZS4gXG4gKiBAcGFyYW0ge3N0cmluZ30gcXVlcnkgVGhlIGZpbHRlciB0byByZXRyaWV2ZSwgZmluZGluZyBtYXRjaGVzIGJ5IG5hbWUuIFxuICogXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxTdHJpbmc+fSBUaGUgdXNlciByZXBvc2l0b3JpZXMgZmlsdGVyZWQgaWYgaXQgcmVzb2x2ZXMsIGFuIGVycm9yIGlmIGl0IHJlamVjdHMuXG4gKiBcbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiBjYW5ub3QgZmluZCB0aGUgdXNlciwgb3Igb3RoZXIgdW5leHBlY3RlZCBlcnJvcnMuXG4gKi9cbmNvbnN0IGZldGNoID0gcmVxdWlyZShcIm5vZGUtZmV0Y2hcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZXIsIHF1ZXJ5KSB7XG4gICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9zZWFyY2gvcmVwb3NpdG9yaWVzP3E9JHtxdWVyeX0rdXNlcjoke3VzZXJ9YFxuICAgICAgICAgICAgY29uc3QgbWV0aG9kID0gJ0dFVCdcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB1bmRlZmluZWRcbiAgICAgICAgICAgIGNvbnN0IGJvZHkgPSB1bmRlZmluZWRcblxuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7IG1ldGhvZCwgaGVhZGVycywgYm9keSB9KVxuICAgICAgICAgICAgY29uc3QgY29udGVudCA9IGF3YWl0IHJlcy50ZXh0KClcbiAgICAgICAgICAgIGNvbnN0IHsgc3RhdHVzIH0gPSByZXNcblxuICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gMjAwKSByZXR1cm4gSlNPTi5wYXJzZShjb250ZW50KVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBlcnJvciB9ID0gSlNPTi5wYXJzZShjb250ZW50KVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UpXG4gICAgICAgIH1cbiAgICB9KSgpXG59Il19