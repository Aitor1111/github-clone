function cov_15cgk23irk(){var path="/Users/aitortrujillo/Documents/Coding/github-clone/logic/retrieve-repos.js";var hash="813eee978e509c3ceed4e5aba205564579d11ac3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/aitortrujillo/Documents/Coding/github-clone/logic/retrieve-repos.js",statementMap:{"0":{start:{line:11,column:14},end:{line:11,column:35}},"1":{start:{line:13,column:0},end:{line:34,column:1}},"2":{start:{line:14,column:4},end:{line:33,column:8}},"3":{start:{line:15,column:8},end:{line:32,column:9}},"4":{start:{line:16,column:24},end:{line:16,column:68}},"5":{start:{line:17,column:27},end:{line:17,column:32}},"6":{start:{line:18,column:28},end:{line:18,column:37}},"7":{start:{line:19,column:25},end:{line:19,column:34}},"8":{start:{line:21,column:24},end:{line:21,column:67}},"9":{start:{line:22,column:28},end:{line:22,column:44}},"10":{start:{line:23,column:31},end:{line:23,column:34}},"11":{start:{line:25,column:12},end:{line:29,column:13}},"12":{start:{line:25,column:32},end:{line:25,column:58}},"13":{start:{line:27,column:34},end:{line:27,column:53}},"14":{start:{line:28,column:16},end:{line:28,column:38}},"15":{start:{line:31,column:12},end:{line:31,column:42}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:17},end:{line:13,column:18}},loc:{start:{line:13,column:33},end:{line:34,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:12},end:{line:14,column:13}},loc:{start:{line:14,column:24},end:{line:33,column:5}},line:14}},branchMap:{"0":{loc:{start:{line:25,column:12},end:{line:29,column:13}},type:"if",locations:[{start:{line:25,column:12},end:{line:29,column:13}},{start:{line:25,column:12},end:{line:29,column:13}}],line:25}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"813eee978e509c3ceed4e5aba205564579d11ac3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_15cgk23irk=function(){return actualCoverage;};}return actualCoverage;}cov_15cgk23irk();/**
 * Retrieves user repositories.
 * 
 * @param {string} user The user repos to retrieve. 
 * 
 * @returns {Promise<String>} The user repositories if it resolves, an error if it rejects.
 * 
 * @throws {Error} If cannot find the user repos, or other unexpected errors.
 */const fetch=(cov_15cgk23irk().s[0]++,require("node-fetch"));cov_15cgk23irk().s[1]++;module.exports=function(user){cov_15cgk23irk().f[0]++;cov_15cgk23irk().s[2]++;return(async()=>{cov_15cgk23irk().f[1]++;cov_15cgk23irk().s[3]++;try{const url=(cov_15cgk23irk().s[4]++,`https://api.github.com/users/${user}/repos`);const method=(cov_15cgk23irk().s[5]++,'GET');const headers=(cov_15cgk23irk().s[6]++,undefined);const body=(cov_15cgk23irk().s[7]++,undefined);const res=(cov_15cgk23irk().s[8]++,await fetch(url,{method,headers,body}));const content=(cov_15cgk23irk().s[9]++,await res.text());const{status}=(cov_15cgk23irk().s[10]++,res);cov_15cgk23irk().s[11]++;if(status===200){cov_15cgk23irk().b[0][0]++;cov_15cgk23irk().s[12]++;return JSON.parse(content);}else{cov_15cgk23irk().b[0][1]++;const{error}=(cov_15cgk23irk().s[13]++,JSON.parse(content));cov_15cgk23irk().s[14]++;throw new Error(error);}}catch(error){cov_15cgk23irk().s[15]++;throw new Error(error.message);}})();};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJldHJpZXZlLXJlcG9zLmpzIl0sIm5hbWVzIjpbImZldGNoIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ1c2VyIiwidXJsIiwibWV0aG9kIiwiaGVhZGVycyIsInVuZGVmaW5lZCIsImJvZHkiLCJyZXMiLCJjb250ZW50IiwidGV4dCIsInN0YXR1cyIsIkpTT04iLCJwYXJzZSIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIl0sIm1hcHBpbmdzIjoib21FQWVZOzJGQWZaOzs7Ozs7OztHQVVBLEtBQU1BLENBQUFBLEtBQUssMEJBQUdDLE9BQU8sQ0FBQyxZQUFELENBQVYsQ0FBWCxDLHdCQUVBQyxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsU0FBVUMsSUFBVixDQUFnQixpREFDN0IsTUFBTyxDQUFDLFNBQVksaURBQ2hCLEdBQUksQ0FDQSxLQUFNQyxDQUFBQSxHQUFHLDBCQUFJLGdDQUErQkQsSUFBSyxRQUF4QyxDQUFULENBQ0EsS0FBTUUsQ0FBQUEsTUFBTSwwQkFBRyxLQUFILENBQVosQ0FDQSxLQUFNQyxDQUFBQSxPQUFPLDBCQUFHQyxTQUFILENBQWIsQ0FDQSxLQUFNQyxDQUFBQSxJQUFJLDBCQUFHRCxTQUFILENBQVYsQ0FFQSxLQUFNRSxDQUFBQSxHQUFHLDBCQUFHLEtBQU1WLENBQUFBLEtBQUssQ0FBQ0ssR0FBRCxDQUFNLENBQUVDLE1BQUYsQ0FBVUMsT0FBVixDQUFtQkUsSUFBbkIsQ0FBTixDQUFkLENBQVQsQ0FDQSxLQUFNRSxDQUFBQSxPQUFPLDBCQUFHLEtBQU1ELENBQUFBLEdBQUcsQ0FBQ0UsSUFBSixFQUFULENBQWIsQ0FDQSxLQUFNLENBQUVDLE1BQUYsNEJBQWFILEdBQWIsQ0FBTixDQVJBLHlCQVVBLEdBQUlHLE1BQU0sR0FBSyxHQUFmLENBQW9CLDJEQUFPQyxDQUFBQSxJQUFJLENBQUNDLEtBQUwsQ0FBV0osT0FBWCxDQUFQLENBQTBCLENBQTlDLElBQ0ssNEJBQ0QsS0FBTSxDQUFFSyxLQUFGLDRCQUFZRixJQUFJLENBQUNDLEtBQUwsQ0FBV0osT0FBWCxDQUFaLENBQU4sQ0FEQyx5QkFFRCxLQUFNLElBQUlNLENBQUFBLEtBQUosQ0FBVUQsS0FBVixDQUFOLENBQ0gsQ0FDSixDQUFDLE1BQU9BLEtBQVAsQ0FBYywwQkFDWixLQUFNLElBQUlDLENBQUFBLEtBQUosQ0FBVUQsS0FBSyxDQUFDRSxPQUFoQixDQUFOLENBQ0gsQ0FDSixDQW5CTSxHQUFQLENBb0JILENBckJEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXRyaWV2ZXMgdXNlciByZXBvc2l0b3JpZXMuXG4gKiBcbiAqIEBwYXJhbSB7c3RyaW5nfSB1c2VyIFRoZSB1c2VyIHJlcG9zIHRvIHJldHJpZXZlLiBcbiAqIFxuICogQHJldHVybnMge1Byb21pc2U8U3RyaW5nPn0gVGhlIHVzZXIgcmVwb3NpdG9yaWVzIGlmIGl0IHJlc29sdmVzLCBhbiBlcnJvciBpZiBpdCByZWplY3RzLlxuICogXG4gKiBAdGhyb3dzIHtFcnJvcn0gSWYgY2Fubm90IGZpbmQgdGhlIHVzZXIgcmVwb3MsIG9yIG90aGVyIHVuZXhwZWN0ZWQgZXJyb3JzLlxuICovXG5cbmNvbnN0IGZldGNoID0gcmVxdWlyZShcIm5vZGUtZmV0Y2hcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZXIpIHtcbiAgICByZXR1cm4gKGFzeW5jICgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzLyR7dXNlcn0vcmVwb3NgXG4gICAgICAgICAgICBjb25zdCBtZXRob2QgPSAnR0VUJ1xuICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHVuZGVmaW5lZFxuICAgICAgICAgICAgY29uc3QgYm9keSA9IHVuZGVmaW5lZFxuXG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaCh1cmwsIHsgbWV0aG9kLCBoZWFkZXJzLCBib2R5IH0pXG4gICAgICAgICAgICBjb25zdCBjb250ZW50ID0gYXdhaXQgcmVzLnRleHQoKVxuICAgICAgICAgICAgY29uc3QgeyBzdGF0dXMgfSA9IHJlc1xuXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09PSAyMDApIHJldHVybiBKU09OLnBhcnNlKGNvbnRlbnQpXG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGVycm9yIH0gPSBKU09OLnBhcnNlKGNvbnRlbnQpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UpXG4gICAgICAgIH1cbiAgICB9KSgpXG59Il19